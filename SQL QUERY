-- Retrieve the total number of orders placed.
use pizzasale;
select count(order_id) as total_orders
from orders;


-- Calculate the total revenue generated from pizza sales.
select round(sum(orders_details.quantity*pizzas.price),2) as total_sales
from orders_details
join pizzas
on pizzas.pizza_id=orders_details.pizza_id;


-- Identify the highest-priced pizza.
select pizza_types.name,pizzas.price
from pizza_types
join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
order by pizzas.price desc
limit 1;


-- Identify the most common pizza size ordered.
select pizzas.size,count(orders_details.order_id) as maximizesize
from pizzas join orders_details
on pizzas.pizza_id=orders_details.pizza_id
group by pizzas.size
order by maximizesize desc
limit 1;


-- List the top 5 most ordered pizza types along with their quantities.
select pizza_types.name,sum(orders_details.quantity) as quantity
from pizza_types join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join orders_details
on orders_details.pizza_id=pizzas.pizza_id
group by  pizza_types.name order by quantity desc
limit 5;


-- Join the necessary tables to find the total quantity of each pizza category ordered.
select pizza_types.category,sum(orders_details.quantity) as quantity
from pizza_types join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join orders_details
on orders_details.pizza_id=pizzas.pizza_id
group by  pizza_types.category order by quantity desc
limit 5;


-- Determine the distribution of orders by hour of the day.
select sum(orders_details.quantity) as total,orders.order_time 
from orders
join orders_details
on orders.order_id=orders_details.order_id
group by orders.order_time
order by total desc ;
select hour(order_time),count(order_id) from orders
group by hour(order_time);


-- Join relevant tables to find the category-wise distribution of pizzas.
select count(pizza_types.pizza_type_id),pizza_types.category
from pizza_types
group by pizza_types.category;


-- Group the orders by date and calculate the average number of pizzas ordered per day.
select avg (total) as avg_pizza_order_per_day from 
(select sum(orders_details.quantity)as total,orders.order_date
from orders
join orders_details
on orders.order_id=orders_details.order_id
group by orders.order_date) as order_quantity;


-- Determine the top 3 most ordered pizza types based on revenue.
select pizza_types.name,sum(pizzas.price*orders_details.quantity) as revenue
from pizza_types join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join orders_details
on orders_details.pizza_id=pizzas.pizza_id
group by pizza_types.name
order by revenue desc
limit 3;


-- Calculate the percentage contribution of each pizza type to total revenue.

select pizza_types.category,(sum(pizzas.price*orders_details.quantity)/(select round(sum(orders_details.quantity*pizzas.price),2) as total_sales
from orders_details
join pizzas
on pizzas.pizza_id=orders_details.pizza_id))*100 as revenue
from pizza_types join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join orders_details
on orders_details.pizza_id=pizzas.pizza_id
group by pizza_types.category
order by revenue desc
;

-- Analyze the cumulative revenue generated over time.

select order_date,
sum(revenue) over(order by order_date) as cum_revenue
from
(select orders.order_date,
sum(orders_details.quantity*pizzas.price) as revenue
from orders_details join pizzas
on orders_details.pizza_id=pizzas.pizza_id
join orders
on orders.order_id=orders_details.order_id
group by orders.order_date)as sales;

